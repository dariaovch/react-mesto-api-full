{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/UpdateAvatarPopup.js","components/AddCardPopup.js","components/PopupWithImage.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","item","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","aria-label","onClick","link","name","length","Main","props","onUpdateAvatar","avatar","onEditProfile","about","onAddCard","cards","map","key","Footer","PopupWithForm","isOpen","onClose","method","onSubmit","noValidate","title","children","buttonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","id","onChange","target","value","required","minLength","maxLength","UpdateAvatarPopup","inputRef","useRef","current","ref","placeholder","AddCardPopup","nameRef","linkRef","PopupWithImage","card","api","options","this","_url","url","_headers","headers","fetch","res","ok","json","Promise","reject","Error","status","getData","then","_getResponseData","all","getUserInfo","getInitialCards","formData","body","JSON","stringify","cardId","authorization","App","setCurrentUser","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isUpdateAvatarPopupOpen","setIsUpdateAvatarPopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","getAllPageData","argument","userData","cardsData","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","saveEditedInfo","data","updateAvatar","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b8c655b8.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n    return ( \n    <header className=\"header\">\n        <img src={logo} className=\"header__logo\" alt=\"Логотип Место Россия\" />\n    </header>\n)\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ item, onCardClick, onCardLike, onCardDelete }) {\n\n  //Подписка на контекст текущего пользователя и получение ID карточки для манипуляций с ней\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const isOwn = item.owner._id === currentUser._id;\n\n  const cardDeleteButtonClassName = (\n    `${isOwn ? 'cards__delete-button cards__delete-button_visible' : 'cards__delete-button'}`\n  );\n\n  const isLiked = item.likes.some(i => i._id === currentUser._id);\n\n  const cardLikeButtonClassName = (\n    `${isLiked ? 'cards__like-button cards__like-button_active' : 'cards__like-button'}`\n  );\n\n    //Функции для обработки манипуляций с карточкой: клик, лайк, удаление\n    function handleClick() {\n        onCardClick(item)\n      }  \n\n    function handleLikeClick() {\n      onCardLike(item)\n    }\n\n    function handleDeleteClick() {\n      onCardDelete(item)\n    }\n\n    return (\n        <li className=\"cards__item\">\n            <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"delete\" onClick={handleDeleteClick}></button>\n            <img className=\"cards__image\" alt=\"Фотография места\" src={item.link} onClick={handleClick} />\n            <div className=\"cards__name-container\">\n                  <h2 className=\"cards__heading\">{item.name}</h2>\n                <div className=\"cards__like-container\"><button className={cardLikeButtonClassName} type=\"button\" aria-label=\"like\" onClick={handleLikeClick}></button><p className=\"cards__like-counter\">{item.likes.length}</p></div>\n            </div>\n          </li>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main(props) {\n\n    //Подписка на контекст текущего пользователя\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n                <section className=\"profile\">\n                    <div className=\"profile__info-container\">\n                        <div className=\"profile__img-container\" onClick={props.onUpdateAvatar}><img className=\"profile__avatar\" alt=\"Аватар пользователя\" src={currentUser.avatar} /></div>\n                        <div className=\"profile__info\">\n                            <div className=\"profile__edit-container\">\n                                <h1 className=\"profile__name\">{currentUser.name}</h1>\n                                <button className=\"profile__edit-button\" type=\"button\" aria-label=\"edit\" onClick={props.onEditProfile}></button>\n                            </div>\n                            <p className=\"profile__occupation\">{currentUser.about}</p>\n                        </div>\n                    </div>\n                    <button className=\"profile__add-button\" type=\"button\" aria-label=\"add\" onClick={props.onAddCard}></button>\n                </section>\n\n                <section className=\"cards\">\n                    <ul className=\"cards__grid\">\n                    {props.cards.map((item) => <Card item={item} key={item._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />)}\n                    </ul>\n                </section>\n            </main>\n    )\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n\n    return (\n        <div className={props.isOpen ? `popup popup_type_${props.name} popup_opened` : `popup popup_type_${props.name}`}>\n            <div className=\"popup__container\">\n            <button className=\"popup__close-button\" type=\"button\" aria-label=\"close\" onClick={props.onClose}></button>\n            <form className={`popup__form popup__form_type_${props.name}`} method=\"POST\" name={`${props.name}`} onSubmit={props.onSubmit} noValidate>\n                <h2 className=\"popup__heading\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"popup__save-button\">{props.buttonText}</button>\n            </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nexport default function EditProfilePopup(props) {\n    \n    //Стейт-переменные для данных формы\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    //Получение данных из инпутов\n    function handleNameChange(evt) {\n        setName(evt.target.value)\n    }\n\n    function handDescriptionChange(evt) {\n        setDescription(evt.target.value)\n    }\n\n    //Подписка на контекст текущего пользователя\n    const currentUser = React.useContext(CurrentUserContext);\n    \n    //Обновление данных текущего пользователя\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    //Сабмит формы\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        \n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n\n\n    return ( \n        <PopupWithForm name=\"edit-profile\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\n                <input className=\"popup__input popup__input_name\" type=\"text\" name=\"name\" id=\"name\" onChange={handleNameChange} value={name} required minLength=\"2\" maxLength=\"40\" />\n                <span className=\"popup__form-error\" id=\"name-error\"></span>\n                <input className=\"popup__input popup__input_occupation\" type=\"text\" name=\"about\" id=\"occupation\" onChange={handDescriptionChange} value={description} required minLength=\"2\" maxLength=\"200\" />\n                <span className=\"popup__form-error\" id=\"occupation-error\"></span>\n        </PopupWithForm>\n    )\n}","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nexport default function UpdateAvatarPopup(props) {\n\n    //Создаем реф для инпута\n    const inputRef = React.useRef();\n\n    //Сабмит формы\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        props.onUpdateAvatar({\n            avatar: inputRef.current.value,\n        });\n\n        inputRef.current.value = '';\n    }\n\n    return (\n        <PopupWithForm name=\"update-avatar\" title=\"Обновить аватар\" buttonText=\"Обновить\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\n              <input className=\"popup__input popup__input_avatar-url\" type=\"url\" name=\"url\" id=\"avatar-url\" ref={inputRef} placeholder=\"Ссылка на картинку\" required />\n              <span className=\"popup__form-error\" id=\"avatar-url-error\"></span>\n        </PopupWithForm>\n    )\n}","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nexport default function AddCardPopup(props) {\n\n    //Создаем рефы для инпутов\n    const nameRef = React.useRef();\n    const linkRef = React.useRef();\n\n    //Логика сбора данных из формы и сабмита\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        \n        props.onAddCard({\n            name: nameRef.current.value,\n            link: linkRef.current.value,\n        });\n\n        nameRef.current.value = '';\n        linkRef.current.value = '';\n    }\n\n    return (\n        <PopupWithForm name=\"add-card\" title=\"Новое место\" buttonText=\"Создать\" isOpen={props.isOpen} onSubmit={handleSubmit} onClose={props.onClose}>\n          <input className=\"popup__input popup__input_place\" type=\"text\" name=\"name\" id=\"place\" ref={nameRef} placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" />\n          <span className=\"popup__form-error\" id=\"place-error\"></span>\n          <input className=\"popup__input popup__input_link\" type=\"url\" name=\"link\" id=\"link\" ref={linkRef} placeholder=\"Ссылка на картинку\" required />\n          <span className=\"popup__form-error\" id=\"link-error\"></span>\n        </PopupWithForm>\n    )\n}","import React from 'react';\n\nfunction PopupWithImage(props) {\n    return (\n        <div className={props.isOpen ? `popup popup_type_show-card popup_opened` : `popup popup_type_show-card`}>\n            <div className=\"popup__container\">\n            <button className=\"popup__close-button\" type=\"button\" aria-label=\"close\" onClick={props.onClose}></button>\n            <figure className=\"popup__figure\">\n                <img className=\"popup__image\" alt=\"Фотография места\" src={props.card.link} />\n                <figcaption className=\"popup__image-caption\">{props.card.name}</figcaption>\n            </figure>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithImage;","class Api {\n    constructor(options) {\n        this._url = options.url;\n        this._headers = options.headers;\n    }\n\n    getData(name) {\n        return fetch(`${this._url}${name}`, {\n            headers: this._headers,\n        });\n    }\n\n  \n    _getResponseData(res) {\n           if(res.ok) {\n               return res.json();\n           }\n           return Promise.reject(new Error(`Ошибка: ${res.status}`));\n       }\n  \n\n    getUserInfo() {\n        return this.getData('users/me')\n           .then(res => this._getResponseData(res));  \n    }\n\n    getInitialCards() {\n       return this.getData('cards')\n           .then(res => this._getResponseData(res));\n        \n    }\n\n    getAllPageData() {\n        return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n    }\n\n    saveEditedInfo(formData) {\n        return fetch(`${this._url}users/me`, {\n            method: \"PATCH\",\n            headers:  this._headers,\n            body: JSON.stringify({\n                name: formData.name,\n                about: formData.about\n              })\n        }).then(res => this._getResponseData(res));\n    \n    }\n\n    addNewCard(item) {\n        return fetch(`${this._url}cards`, {\n            method: \"POST\",\n            headers:  this._headers,\n            body: JSON.stringify({\n                name: item.name,\n                link: item.link\n              })\n        }).then(res => this._getResponseData(res));\n       \n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if(isLiked){\n            return fetch(`${this._url}cards/likes/${cardId}`, {\n                method: \"PUT\",\n                headers: this._headers,\n            }).then(res => this._getResponseData(res));\n        } else {\n            return fetch(`${this._url}cards/likes/${cardId}`, {\n                method: \"DELETE\",\n                headers:  this._headers\n            }).then(res => this._getResponseData(res));\n        }\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}cards/${cardId}`, {\n            method: \"DELETE\",\n            headers:  this._headers\n        }).then(res => this._getResponseData(res));\n        \n    }\n\n    updateAvatar(formData) {\n        return fetch(`${this._url}users/me/avatar`, {\n            method: \"PATCH\",\n            headers:  this._headers,\n            body: JSON.stringify({\n                avatar: formData.avatar,\n              })\n        }).then(res => this._getResponseData(res));\n    }\n\n}\n\nconst options = {\n    url: 'https://mesto.nomoreparties.co/v1/cohort-15/',\n    headers: {\n          authorization: '57f413af-09ac-4c6d-a557-b4a54c66383d',\n          'Content-Type': 'application/json'\n        }\n    };\n\nexport const api = new Api(options);","import React from 'react';\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport UpdateAvatarPopup from './UpdateAvatarPopup.js';\nimport AddCardPopup from './AddCardPopup.js';\n// import DeleteCardPopup from './components/DeleteCardPopup.js';\nimport PopupWithImage from './PopupWithImage.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\n\nfunction App() {\n\n  //Стейт-переменные конктекста текущего пользователя, карточек и открытия попапов\n\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: '',\n    avatar: '#'\n  });\n  const [cards, setCards] = React.useState([]);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isUpdateAvatarPopupOpen, setIsUpdateAvatarPopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: '',\n    link: '#'\n  });\n\n  //Получаем из API данные пользователя и карточек\n  React.useEffect(() => {\n    api.getAllPageData()\n       .then((argument) => {\n          const [ userData, cardsData ] = argument;\n\n          setCurrentUser(userData);\n          setCards(cardsData);\n       })\n       .catch((err) => {\n          console.log(err);\n       });\n  }, []);\n\n\n  //Логика открытия и закрытия попапов\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleUpdateAvatarClick() {\n    setIsUpdateAvatarPopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleCardClick(item) {\n    setIsImagePopupOpen(true);\n    setSelectedCard(item);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsUpdateAvatarPopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: '#'\n    });\n  }\n\n  //Логика получения данных из форм и их отправка на сервер с дальнейшим обновлением данных на странице\n\n  function handleUpdateUser(formData) {\n    api.saveEditedInfo(formData)\n       .then((data) => {\n         setCurrentUser(data);\n         closeAllPopups();\n       })\n       .catch((err) => {\n        console.log(err);\n       });\n  }\n\n  function handleUpdateAvatar(formData) {\n    api.updateAvatar(formData)\n       .then((data) => {\n         setCurrentUser(data);\n         closeAllPopups();\n       })\n       .catch((err) => {\n        console.log(err);\n       });\n  }\n\n  function handleAddCardSubmit(formData) {\n    api.addNewCard(formData)\n       .then((newCard) => {\n         setCards([newCard, ...cards])\n         closeAllPopups();\n       })\n       .catch((err) => {\n        console.log(err);\n       });\n  }\n\n\n  // Логика постановки и снятия лайков через запрос к API\n  function handleCardLike(item) {\n    \n    const isLiked = item.likes.some(i => i._id === currentUser._id);\n    \n    api.changeLikeCardStatus(item._id, !isLiked).then((newCard) => {\n      const newCards = cards.map((c) => c._id === item._id ? newCard : c);\n      setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });;\n  }\n\n  // Логика удаления карточки\n  function handleCardDelete(item) {\n   \n    api.deleteCard(item._id).then(() => {\n     const newCards = cards.filter((c) => c._id !== item._id);\n     setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(err);\n    });;\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n\n          <Main onEditProfile={handleEditProfileClick} onUpdateAvatar={handleUpdateAvatarClick} onAddCard={handleAddCardClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n            \n          <Footer />\n        </div>\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n        <UpdateAvatarPopup isOpen={isUpdateAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n        <AddCardPopup isOpen={isAddCardPopupOpen} onClose={closeAllPopups} onAddCard={handleAddCardSubmit} />\n\n        <PopupWithImage isOpen={isImagePopupOpen} card={selectedCard} onClose={closeAllPopups} />\n\n        {/* <DeleteCardPopup isOpen={isDeleteCardPopupOpen} onCardDelete={handleCardDelete} onClose={closeAllPopups} /> */}\n      \n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}